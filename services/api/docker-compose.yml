version: '3.8' 
 
services: 
  web: 
    build: 
      context: . 
      dockerfile: deployment/docker/Dockerfile 
    restart: always 
    volumes: 
      - .:/app 
      - static_volume:/app/static 
      - media_volume:/app/media 
    env_file: 
      - .env 
    depends_on: 
      postgres:
        condition: service_healthy
      redis: 
        condition: service_started
    networks: 
      - app-network 
 
  postgres: 
    image: postgres:15
    volumes: 
      - postgres_data:/var/lib/postgresql/data 
    env_file: 
      - .env 
    environment:
      - POSTGRES_DB=${DB_NAME}
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
    ports: 
      - "5432:5432" 
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER} -d ${DB_NAME}"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    restart: always
    networks: 
      - app-network 
 
  redis: 
    image: redis:alpine 
    volumes: 
      - redis_data:/data 
    networks: 
      - app-network 
 
  nginx: 
    build: 
      context: ./deployment/docker/nginx 
    volumes: 
      - static_volume:/app/static 
      - media_volume:/app/media 
    ports: 
      - "80:80" 
    depends_on: 
      - web 
    networks: 
      - app-network 
 
networks: 
  app-network: 
 
volumes: 
  postgres_data: 
  redis_data: 
  static_volume: 
  media_volume:
